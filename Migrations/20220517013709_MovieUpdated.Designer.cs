// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperHeroAPI.Data;

#nullable disable

namespace SuperHeroAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220517013709_MovieUpdated")]
    partial class MovieUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SuperHeroAPI.Entity.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.SuperHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UniverseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniverseId");

                    b.ToTable("SuperHeroes");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.SuperHeroesMovies", b =>
                {
                    b.Property<int>("SuperHeroId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("SuperHeroId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("SuperHeroesMovies");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.Universe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Universes");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.SuperHero", b =>
                {
                    b.HasOne("SuperHeroAPI.Entity.Universe", "Universe")
                        .WithMany("SuperHeroes")
                        .HasForeignKey("UniverseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universe");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.SuperHeroesMovies", b =>
                {
                    b.HasOne("SuperHeroAPI.Entity.Movie", "Movie")
                        .WithMany("SuperHeroesMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperHeroAPI.Entity.SuperHero", "SuperHero")
                        .WithMany("SuperHeroesMovies")
                        .HasForeignKey("SuperHeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("SuperHero");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.Movie", b =>
                {
                    b.Navigation("SuperHeroesMovies");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.SuperHero", b =>
                {
                    b.Navigation("SuperHeroesMovies");
                });

            modelBuilder.Entity("SuperHeroAPI.Entity.Universe", b =>
                {
                    b.Navigation("SuperHeroes");
                });
#pragma warning restore 612, 618
        }
    }
}
